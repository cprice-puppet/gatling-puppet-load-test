package com.puppetlabs.gatling.config

import com.puppetlabs.gatling.runner.SimulationWithScenario

/**
 * This class is basically just a struct to hold info about a simulated
 * puppet agent node.  One or more of these get combined together in an
 * instance of [[com.puppetlabs.gatling.config.PuppetGatlingConfig]] to
 * drive a Gatling run (via [[com.puppetlabs.gatling.runner.PuppetGatlingRunner]]).
 *
 * @param simulationClass - the fully qualified class name of the node simulation class.  These classes are usually generated by the Gatling recorder (via `gatling-puppet-agent-capture)`, and then modified according to the documentation in `README-GENERATING-AGENT-SIMULATIONS.md`
 * @param numRepetitions - the number of times that the series of HTTP requests in this simulation should be issued for each simulated "node"
 * @param numInstances - the number of concurrent nodes of this type that should be simulated
 * @param rampUpDuration - the number of seconds to spread out the instantiation of the individual node instances over.  (e.g., if you have 10 instances and a ramp-up duration of 10, then a new node instance will be created every 1 second for the first 10 seconds of the simulation.
 */
class Node(val simulationClass: Class[SimulationWithScenario],
            val numRepetitions: Int,
            val numInstances: Int,
            val rampUpDuration: Int) {}

object Node {
  def apply(simulationClass: Class[SimulationWithScenario],
            numRepetitions: Int,
            numInstances: Int,
            rampUpDuration: Int) =
    new Node(simulationClass,
              numRepetitions,
              numInstances,
              rampUpDuration)
}
