require 'rototiller'
require 'rspec/core/rake_task'

task :default => :performance

desc 'Run Performance setup'
rototiller_task :performance do |t|
  t.add_env({:name => 'BEAKER_PE_DIR', :message => 'The PE download directory, example: http://enterprise.delivery.puppetlabs.net/archives/releases/2017.2.4'}) if ENV['BEAKER_INSTALL_TYPE'] == 'pe'
  t.add_env({:name => 'BEAKER_PE_VER', :message => 'The PE version to install on hosts, example: 2017.2.4'}) if ENV['BEAKER_INSTALL_TYPE'] == 'pe'
  t.add_env({:name => 'ENVIRONMENT_TYPE', :message => 'Either gatling or clamps', :default => 'gatling'})
  t.add_env({:name => 'PUPPET_GATLING_R10K_CONTROL_REPO', :default => 'git@github.com:puppetlabs/puppetlabs-puppetserver_perf_control.git'})
  t.add_env({:name => 'PUPPET_GATLING_R10K_BASEDIR', :default => '/etc/puppetlabs/code-staging/environments'})
  t.add_env({:name => 'PUPPET_GATLING_R10K_ENVIRONMENTS', :default => 'production'})
  t.add_env({:name => 'PUPPET_BIN_DIR', :default => '/opt/puppetlabs/puppet/bin'})
  t.add_env({:name => 'PUPPET_R10K_VERSION', :default => '2.3.0'})
  t.add_env({:name => 'PUPPET_SCALE_CLASS', :default => 'role::by_size::large'})
  t.add_env({:name => 'PUPPET_GATLING_SCENARIO', :default => 'ApplesToApples.json'})
  t.add_env({:name => 'PUPPET_SERVER_SERVICE_NAME', :default => 'pe-puppetserver'})
  t.add_env({:name => 'SUT_ARCHIVE_FILES', :default => ''})
  t.add_env({:name => 'PACKAGE_BUILD_VERSION', :default => 'latest'}) if ENV['BEAKER_INSTALL_TYPE'] == 'foss'
  t.add_env({:name => 'PUPPET_AGENT_VERSION', :default => 'latest'}) if ENV['BEAKER_INSTALL_TYPE'] == 'foss'

  default_setup = 'setup/install'

  # TODO: This is a temporary step... going to get a working workflow for gatling runs,
  # then a separate workflow for clamps and then work on combining them.
  if ENV['ENVIRONMENT_TYPE'] == 'gatling'
    default_setup = 'setup/install_gatling'
    default_tests = 'tests'
  end

  # env vars needed for Beaker
  t.add_command do |command|
    command.name = "bundle exec beaker"
    command.add_env({:name => 'BEAKER_EXECUTABLE'})

    command.add_option do |option|
      option.name = '--hosts'
      option.message = 'The configuration file that Beaker will use'
      option.add_argument do |arg|
        arg.name = "config/beaker_hosts/pe-perf-test.cfg" if ENV['BEAKER_INSTALL_TYPE'] == 'pe'
        arg.name = "config/beaker_hosts/foss-perf-test.cfg" if ENV['BEAKER_INSTALL_TYPE'] == 'foss'
        arg.add_env({:name => 'BEAKER_HOSTS'})
      end
    end
    command.add_option do |option|
      option.name = '--keyfile'
      option.message = 'The SSH key used to access a SUT'
      option.add_argument do |arg|
        arg.name = "#{ENV['HOME']}/.ssh/id_rsa-acceptance"
        arg.add_env({:name => 'BEAKER_KEYFILE'})
      end
    end
    command.add_option do |option|
      option.name = '--log-level'
      option.message = 'The log level under which you want beaker to run'
      option.add_argument do |arg|
        arg.name = 'debug'
        arg.add_env({:name => 'BEAKER_LOG_LEVEL'})
      end
    end
    unless ENV['BEAKER_PRE_SUITE'] == ''
      command.add_option do |option|
        option.name = '--pre-suite'
        option.message = 'Beaker pre-suite'
        option.add_argument do |arg|
          arg.name = default_setup
          arg.add_env({:name => 'BEAKER_PRE_SUITE'})
        end
      end
    end
    unless ENV['BEAKER_TESTS'] == ''
      command.add_option do |option|
        option.name = '--tests'
        option.message = 'Beaker tests'
        option.add_argument do |arg|
          arg.name = default_tests
          arg.add_env({:name => 'BEAKER_TESTS'})
        end
      end
    end
    unless ENV['HELPER_PATH'] == ''
      command.add_option do |option|
        option.name = '--helper'
        option.message = 'Setup helper required for installing PE'
        option.add_argument do |arg|
          arg.name = 'setup/helpers/classification_helper.rb,setup/helpers/ldap_helper.rb,setup/helpers/gatling_config_helper.rb'
          arg.add_env({:name => 'BEAKER_HELPER'})
        end
      end
    end
    command.add_option do |option|
      option.name = '--preserve-hosts'
      option.message = 'Whether to preserve hosts or not'
      option.add_argument do |arg|
        arg.name = 'always'
        arg.add_env({:name => 'BEAKER_PRESERVE_HOSTS'})
      end
    end
    command.add_option do |option|
      option.name = '--type'
      option.message = 'pe or foss'
      option.add_argument do |arg|
        arg.name = 'pe'
        arg.add_env({:name => 'BEAKER_INSTALL_TYPE'})
      end
    end
    puts command.to_str
    # Default:
    # "bundle exec beaker --hosts  --keyfile /Users/samwoods/.ssh/id_rsa-acceptance --log-level debug
    # --pre-suite setup/install_gatling --helper
    # setup/helpers/classification_helper.rb,setup/helpers/ldap_helper.rb,setup/helpers/gatling_config_helper.rb
    # --preserve-hosts always --type pe"
  end
end

desc 'Run Performance setup for clamps'
rototiller_task :performance_clamps do |t|
  ENV['ENVIRONMENT_TYPE'] = 'clamps'
  Rake::Task["performance"].execute
end

desc 'Run Performance setup for gatling'
rototiller_task :performance_gatling do |t|
  ENV['ENVIRONMENT_TYPE'] = 'gatling'
  Rake::Task["performance"].execute
end

desc 'Run Performance setup and a very short iteration of gatling tests'
rototiller_task :acceptance do |t|
  ENV['ENVIRONMENT_TYPE'] = 'gatling'
  ENV['PUPPET_GATLING_SCENARIO'] = 'acceptance.json'
  Rake::Task["performance"].execute
end

desc "Run spec tests"
RSpec::Core::RakeTask.new(:spec) do |t|
  t.rspec_opts = ['--color']
  t.pattern = 'spec/'
end

